apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: tech-services
spec:
  minReadySeconds: 30
  replicas: {{ .Values.spec.replicas }}
  revisionHistoryLimit: {{ .Values.spec.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        contact: ts-eng@icann.org
      labels:
        app: {{ .Values.name }}
    spec:
      serviceAccountName: sa-icannhostpathroot
      containers:
        - env:
            {{- range $key, $val := .Values.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
            {{- range .Values.secretRefs }}
            - name: {{ .secretRef.envName }}
              valueFrom:
                secretKeyRef:
                  key: {{ .secretRef.secretKey }}
                  name: {{ .secretRef.name }}
            {{- end }}
          image: '${ trigger[''artifacts''][0][''reference''] }'
          imagePullPolicy: IfNotPresent
          name: icann-rdap-conformance
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          resources:
            limits:
              cpu: '2'
              memory: 10G
            requests:
              cpu: 512m
              memory: 1G
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
